// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dropsink.proto

package dropsink

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DropEntry struct {
	// TODO native Timestamp is available
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fields               map[string]string    `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DropEntry) Reset()         { *m = DropEntry{} }
func (m *DropEntry) String() string { return proto.CompactTextString(m) }
func (*DropEntry) ProtoMessage()    {}
func (*DropEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_1221e8e7975cbdf6, []int{0}
}

func (m *DropEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropEntry.Unmarshal(m, b)
}
func (m *DropEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropEntry.Marshal(b, m, deterministic)
}
func (m *DropEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropEntry.Merge(m, src)
}
func (m *DropEntry) XXX_Size() int {
	return xxx_messageInfo_DropEntry.Size(m)
}
func (m *DropEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DropEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DropEntry proto.InternalMessageInfo

func (m *DropEntry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *DropEntry) GetFields() map[string]string {
	if m != nil {
		return m.Fields
	}
	return nil
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_1221e8e7975cbdf6, []int{1}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DropEntry)(nil), "dropsink.DropEntry")
	proto.RegisterMapType((map[string]string)(nil), "dropsink.DropEntry.FieldsEntry")
	proto.RegisterType((*Void)(nil), "dropsink.Void")
}

func init() { proto.RegisterFile("dropsink.proto", fileDescriptor_1221e8e7975cbdf6) }

var fileDescriptor_1221e8e7975cbdf6 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x29, 0xca, 0x2f,
	0x28, 0xce, 0xcc, 0xcb, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0xa5, 0xe4,
	0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xe2, 0x49, 0xa5, 0x69, 0xfa, 0x25, 0x99, 0xb9,
	0xa9, 0xc5, 0x25, 0x89, 0xb9, 0x05, 0x10, 0xa5, 0x4a, 0x3b, 0x19, 0xb9, 0x38, 0x5d, 0x80, 0xaa,
	0x5d, 0xf3, 0x4a, 0x8a, 0x2a, 0x85, 0x2c, 0xb8, 0x38, 0xe1, 0x0a, 0x24, 0x18, 0x15, 0x18, 0x35,
	0xb8, 0x8d, 0xa4, 0xf4, 0x20, 0x46, 0xe8, 0xc1, 0x8c, 0xd0, 0x0b, 0x81, 0xa9, 0x08, 0x42, 0x28,
	0x16, 0x32, 0xe7, 0x62, 0x4b, 0xcb, 0x4c, 0xcd, 0x49, 0x29, 0x96, 0x60, 0x56, 0x60, 0x06, 0x6a,
	0x93, 0xd7, 0x83, 0xbb, 0x09, 0x6e, 0xbc, 0x9e, 0x1b, 0x58, 0x05, 0x98, 0x1d, 0x04, 0x55, 0x2e,
	0x65, 0xc9, 0xc5, 0x8d, 0x24, 0x2c, 0x24, 0xc0, 0xc5, 0x9c, 0x9d, 0x5a, 0x09, 0xb6, 0x9b, 0x33,
	0x08, 0xc4, 0x14, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x02, 0x8b, 0x41,
	0x38, 0x56, 0x4c, 0x16, 0x8c, 0x4a, 0x6c, 0x5c, 0x2c, 0x61, 0xf9, 0x99, 0x29, 0x46, 0x96, 0x5c,
	0x1c, 0x20, 0x3b, 0x82, 0x81, 0x96, 0x09, 0xe9, 0x72, 0xb1, 0x04, 0x94, 0x16, 0x67, 0x08, 0x09,
	0x63, 0xb1, 0x5f, 0x8a, 0x0f, 0x21, 0x08, 0xd2, 0xa8, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0x95, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0x46, 0x06, 0x25, 0xb6, 0x42, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DropSinkClient is the client API for DropSink service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DropSinkClient interface {
	Push(ctx context.Context, in *DropEntry, opts ...grpc.CallOption) (*Void, error)
}

type dropSinkClient struct {
	cc *grpc.ClientConn
}

func NewDropSinkClient(cc *grpc.ClientConn) DropSinkClient {
	return &dropSinkClient{cc}
}

func (c *dropSinkClient) Push(ctx context.Context, in *DropEntry, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/dropsink.DropSink/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DropSinkServer is the server API for DropSink service.
type DropSinkServer interface {
	Push(context.Context, *DropEntry) (*Void, error)
}

// UnimplementedDropSinkServer can be embedded to have forward compatible implementations.
type UnimplementedDropSinkServer struct {
}

func (*UnimplementedDropSinkServer) Push(ctx context.Context, req *DropEntry) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Push not implemented")
}

func RegisterDropSinkServer(s *grpc.Server, srv DropSinkServer) {
	s.RegisterService(&_DropSink_serviceDesc, srv)
}

func _DropSink_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DropSinkServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dropsink.DropSink/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DropSinkServer).Push(ctx, req.(*DropEntry))
	}
	return interceptor(ctx, in, info, handler)
}

var _DropSink_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dropsink.DropSink",
	HandlerType: (*DropSinkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _DropSink_Push_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dropsink.proto",
}
